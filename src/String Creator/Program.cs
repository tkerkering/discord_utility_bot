using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;

namespace StringCreator
{
    public class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Scanning for strings!");

            if (!File.Exists(args[0]))
            {
                Console.WriteLine("The strings file seems to be missing! Pass it as first argument.");
                Environment.Exit(0);
            }

            // Delete string key file
            if (File.Exists(args[1]))
            {
                Console.WriteLine("Found strings file for {0} deleting it now.", args[1]);
                try
                {
                    File.Delete(args[1]);
                }
                catch
                {
                    Console.WriteLine("Couldn't delete strings file, is it in use?");
                    Environment.Exit(0);
                }
            }

            // Create new string key file
            Console.WriteLine("Creating strings file at {0}", args[1]);
            using var writer = File.CreateText(args[1]);
            writer.WriteLine("// Autogenerated by String Creator");
            writer.WriteLine("// Made by Tobias K.");
            writer.WriteLine("");
            writer.WriteLine("namespace DiscordUtilityBot.Constants");
            writer.WriteLine("{");
            writer.WriteLine("    public static class Strings");
            writer.WriteLine("    {");

            ProcessJsonFile(writer, args[0]);

            writer.WriteLine("    }");
            writer.WriteLine("}");
            Console.WriteLine("Created strings file at {0}", args[1]);
        }

        public static void ProcessJsonFile(StreamWriter writer, string pathToJsonFile)
        {
            var jsonString = File.ReadAllText(pathToJsonFile);
            var deserialized = JsonSerializer.Deserialize<List<JsonDefinition>>(jsonString);
            foreach (var entry in deserialized)
            {
                Console.WriteLine("  Processing {0}", entry.Key);
                writer.WriteLine("        public readonly static string {0} = @\"{1}\";", entry.Key, entry.Value);
            }
        }
    }
}